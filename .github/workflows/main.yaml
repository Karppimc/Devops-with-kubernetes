name: CI/CD Pipeline for Todo Project

on:
  push:
    branches:
      - main
      - '**' # Include all branches for separate environments

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGE_TODO_APP: karppimc/todo
  IMAGE_TODO_BACKEND: karppimc/todo-backend
  IMAGE_CRONJOB: karppimc/cronjob-todo
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      ## âœ… Checkout Code
      - name: Checkout Repository
        uses: actions/checkout@v4

      ## âœ… Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: Set Up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      ## âœ… Authenticate with Docker Hub
      - name: Docker Hub Authentication
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      ## âœ… Authenticate Docker with Google Artifact Registry
      - name: Authenticate Docker with Google Artifact Registry
        run: |
          gcloud auth configure-docker gcr.io --quiet

      ## âœ… Ensure Namespace Exists
      - name: Ensure Namespace Exists
        run: |
          if [[ "$BRANCH" == "main" ]]; then
            NAMESPACE=todo-space
          else
            NAMESPACE=${GITHUB_REF#refs/heads/}
          fi
          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE

      ## âœ… Install SOPS from GitHub Releases
      - name: Install SOPS
        run: |
          wget https://github.com/getsops/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64 -O sops
          chmod +x sops
          sudo mv sops /usr/local/bin/sops
          sops --version

      ## âœ… Add Age Key to Runner
      - name: Add Age Key for SOPS Decryption
        run: |
          mkdir -p ~/.config/sops/age
          echo "${{ secrets.AGE_SECRET_KEY }}" > ~/.config/sops/age/keys.txt
          chmod 600 ~/.config/sops/age/keys.txt

      ## âœ… Decrypt Kubernetes Secrets for Database
      - name: Decrypt Database Secrets
        run: |
          sops --decrypt Part3/3.03/database/manifests/secret.enc.yaml > Part3/3.03/database/manifests/secret.yaml

      ## âœ… Build and Push Docker Images

      ### ðŸš€ Build and Push Todo App Image
      - name: Build and Push Todo App Image
        run: |
          docker build Part3/3.03/todo-app -t gcr.io/$PROJECT_ID/$IMAGE_TODO_APP:$BRANCH-${{ github.sha }}
          docker push gcr.io/$PROJECT_ID/$IMAGE_TODO_APP:$BRANCH-${{ github.sha }}

      ### ðŸš€ Build and Push Todo Backend Image
      - name: Build and Push Todo Backend Image
        run: |
          docker build Part3/3.03/todo-backend -t gcr.io/$PROJECT_ID/$IMAGE_TODO_BACKEND:$BRANCH-${{ github.sha }}
          docker push gcr.io/$PROJECT_ID/$IMAGE_TODO_BACKEND:$BRANCH-${{ github.sha }}

      ### ðŸš€ Build and Push CronJob Image
      - name: Build and Push CronJob Image
        run: |
          docker build Part3/3.03/cronjobs -t gcr.io/$PROJECT_ID/$IMAGE_CRONJOB:$BRANCH-${{ github.sha }}
          docker push gcr.io/$PROJECT_ID/$IMAGE_CRONJOB:$BRANCH-${{ github.sha }}

      ## âœ… Deploy with Kustomize
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      ### ðŸš€ Deploy Todo App
      - name: Deploy Todo App
        run: |
          cd Part3/3.03/todo-app/manifests
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image PROJECT/IMAGE=gcr.io/$PROJECT_ID/$IMAGE_TODO_APP:$BRANCH-${{ github.sha }}
          kustomize build . | kubectl apply -f -

      ### ðŸš€ Deploy Database
      - name: Deploy Database
        run: |
          cd Part3/3.03/database/manifests
          kustomize edit set namespace $NAMESPACE
          kustomize build . | kubectl apply -f -

      ## âœ… Verify Deployment
      - name: Verify Deployments
        run: |
          kubectl rollout status deployment/todo -n $NAMESPACE
          kubectl get secrets -n $NAMESPACE
          kubectl get statefulsets -n $NAMESPACE
          kubectl get services -n $NAMESPACE -o wide
